{{#each teacher}}
   <div class="card mx-4" style="width: 18rem;">
     <div class="card-body">
       <h5 class="card-title">{{this.name}}</h5>
       <p class="card-text">{{this.subject}}</p>
            <div class="btn-group my-4">
                  {{#if this.slots}}
                <select class="form-select form-select-sm" id='time' aria-label=".form-select-sm example">
                  <option selected>Select Time</option>
                  {{#each this.slots}}
                  <option value='{{@index}}'>{{time}}</option>
                  {{/each}}
                </select>
                  {{else}}
                  {{!-- <p style="color: red;">Teacher is Booked for Today!</p> --}}
                  <option selected style="color: #0d6efd;">Not Available</option>
                  {{/if}}
            </div>
       <p>{{this._id}}</p>
        <a href='/select-teacher/{{this._id}}/{{../student._id}}' id='anchor' class="btn btn-primary">Book Appointment</a>
            <form action="/appointments">
            {{#if this.availability}}
            <button type="submit" class="btn btn-primary" id='btn' onclick="avail('{{this._id}}')" >Book Appointment</button>
            {{/if}}
        </form>
     </div>
   </div>
{{/each}}


{{#each teacher}}
   <div class="card mx-4" style="width: 18rem;">
     <div class="card-body">
       <h5 class="card-title">{{this.name}}</h5>
       <p class="card-text">{{this.subject}}</p>
            <div class="btn-group my-4">
                <select class="form-select form-select-sm" id='time' aria-label=".form-select-sm example">
                  <option selected>Select Time</option>
                  {{#each this.slots}}
                  <option value='{{@index}}'>{{time}}</option>
                  {{/each}}
                </select>
            </div>
       <p>{{this._id}}</p>
        {{!-- <a href='/select-teacher/{{this._id}}/{{../student._id}}' id='anchor' class="btn btn-primary">Book Appointment</a> --}}
          {{!-- <form action="/appointments"> --}}
            <button type="submit" id='btn' onclick="avail('{{this._id}}')" >Book Appointment</button>
        {{!-- </form> --}}
     </div>
   </div>
{{/each}}


{{#each teacher}}
   <div class="card mx-4" style="width: 18rem;">
     <div class="card-body">
       <h5 class="card-title">{{this.name}}</h5>
       <p class="card-text">{{this.subject}}</p>
            <div class="btn-group my-4">
                <select class="form-select form-select-sm" id='time' aria-label=".form-select-sm example">
                  <option selected>Select Time</option>
                  {{#each this.slots}}
                  <option value='{{@index}}'>{{time}}</option>
                  {{/each}}
                </select>
            </div>
       <p>{{this._id}}</p>
        {{!-- <a href='/select-teacher/{{this._id}}/{{../student._id}}' id='anchor' class="btn btn-primary">Book Appointment</a> --}}
          {{!-- <form action="/appointments"> --}}
            <button type="submit" id='btn' onclick="avail('{{this._id}}')" >Book Appointment</button>
        {{!-- </form> --}}
     </div>
   </div>
{{/each}}









     // console.log(teacher)
        // console.log(appointment.length)
        // console.log(appointment)

        // console.log(appointment)
        const arr=[]

       for(var i=0;i<appointment.length;i++)
       {
            for(var j=0;j<appointment[i].slots.length;j++)
            {
                arr.push(appointment[i].slots[j].slot);
                
            }
       }
        // const newArr=arr.filter((e)=>
        // {
        //     return teacher.slots.time!=e
        // })

        const newArr=[]

        for(var i=0;i<teacher.slots.length;i++)
        {
            let teach=teacher.slots[i].time;

            let flag=false   

                for(var j=0;j<arr.length;j++)
                {
                    if(teach===arr[j])
                    {
                        flag=true
                        break
                    }
                    
                }
                if(!flag)
                {
                        newArr.push(teach)
                        
                }
        }


        console.log(newArr);
    
        // if(appointment.length!==0)
        // {
            
        // const appointment_slots=[...appointment[0].slots]
        // const teacher_slots=teacher.slots
        
        // // console.log(appointment_slots)
        // // console.log(teacher_slots)

        // for(var i=0;i<teacher_slots.length;i++)
        // {
        //     for(var j=0;j<appointment_slots.length;j++)
        //     {
        //         if(teacher_slots[i].time==appointment_slots[j].slot)
        //          {
        //             teacher_slots.splice(i,1)
        //          }
        //     }
        // }
        // await teacher.save()
        // const available=teacher_slots
        // console.log(available);
        

        // res.render('teacher',{
        //     teacher,
        //     student,
        //     available
        // })

        // }
        // else
        // {
